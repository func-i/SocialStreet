<%= form.error_messages %>
<div id="basic" class="tab-content">
  <%= form.hidden_field :action_id %>

  <%= form.fields_for :searchable do |searchable_fields| %>
    <%= searchable_fields.fields_for :searchable_event_types do |event_type_fields| %>
      <div class="group">
        <label class="label">What?</label>
        <%= event_type_fields.collection_select :event_type_id, @event_types, :id, :name %><br/>
        <span class="description">Event type dropdown.</span>
      </div>
    <% end %>
  <% end %>

  <div class="group">
    <label class="label" for="post_title">Where?</label>

    <%= form.fields_for :searchable do |searchable_fields| %>
      <%= searchable_fields.fields_for :location do |location_fields| %>
        <%= location_fields.text_field :text , :class => "text_field", :style=>"width:100%;", :id => "location-name-field" %>
        <%= location_fields.hidden_field :latitude, :id => "location-lat-field" %>
        <%= location_fields.hidden_field :longitude, :id => "location-lng-field" %>
      <% end %>
    <% end %>
    <div id="event-location-map" style="width:100%;height:300px;border:1px solid white;"></div>


  </div>
  <div class="group">
    <%= form.fields_for :searchable do |searchable_fields| %>
      <%= searchable_fields.fields_for :searchable_date_ranges do |date_range_fields| %>
        <label class="label" for="post_title">When?</label>
        <%= date_range_fields.datetime_select :starts_at, :start_year => Time.now.year, :minute_step => 15 %> <%= Time.zone.now.zone %>
        <br/>
        <span class="description">Start Date and time (Timezone: <%= Time.zone.now.zone %>)</span>

        <div class="group" id="EndDateTime" style="display:none">
          <%= date_range_fields.datetime_select :ends_at, :start_year => Time.now.year, :minute_step => 15 %> <%= Time.zone.now.zone %>
    <%#= form.hidden_field :exclude_end_date, :id => 'exclude_end_date', :value=>'1'%>
          <br/>
          <span class="description">End Date and time (Timezone: <%= Time.zone.now.zone %>)</span>
        </div>
        <br/>
        <%= link_to_function "Add End Date & Time", "$('#EndDateTime').toggle(); $('#exclude_end_date').val(0)" %>

      <% end %>
    <% end %>


  </div>
</div>
<div id="details" style="display:none" class="tab-content">
  <div class="group">
    <label class="label">Title</label>
    <%= form.text_field :name, :rows => 10, :cols => 80, :class => "text_field" %>
    <span class="description">Describe your event</span>
  </div>


  <div class="group">
    <label class="label">Description</label>
    <%= form.text_area :description, :rows => 10, :cols => 80, :class => "text_area" %>
    <span class="description">Describe your event</span>
  </div>
</div

<!--
<div id="attendees" style="display:none" class="tab-content">
  <div class="group">
    <label class="label" for="post_title">Minimum Attendees</label>
<%= form.text_field :minimum_attendees, :class => "text_field"  %>
    <br/>
    <span class="description">Minimum number of people needed for the event to happen</span>
  </div>


  <div class="group">
    <label class="label">Maximum Attendees</label>
<%= form.text_field :maximum_attendees, :class => "text_field"  %>
    <span class="description">Maximum number of people that can attend</span>
  </div>

  <div class="group">
    <label class="label">Allow Guests?</label>
<%= form.check_box :guests_allowed %>
    <span class="description">Select this to allow attendees to bring guests</span>
  </div>
</div>

<div id="cost" style="display:none" class="tab-content">
  <div class="group">
    <label class="label">Cost (in Dollars)</label>
<%= form.text_field :cost_in_dollars, :class => "text_field"  %>
    <span class="description">Cost (in $CA). Set to 0 for free. Default: 0</span>
  </div>
</div>
-->



<% content_for :end_of_body do %>
  <script>
    $(function() {
      $('#main ul.wat-cf > li > a').click(function(e){
        $('.tab-content').hide();
        $('.secondary-navigation li').removeClass('active');
        $(this).closest('li').addClass('active');
        $($(this).data('tab')).show();
        return false;
      });
    });
  </script>
  <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
  <script>
    var geocoder;
    var map;
    var infoWindow;
    var markers = [];
    var dropPinState = false; // true if button to drop pins is selected
    // for testing only;
    var chicago = new google.maps.LatLng(41.850033, -87.6500523);
    $(function() {
      infoWindow = new google.maps.InfoWindow();
      geocoder = new google.maps.Geocoder();
      var myOptions = {
        zoom: 12,
        center: chicago,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      map = new google.maps.Map(document.getElementById("event-location-map"), myOptions);
      // Create the DIV to hold the control and call the DropPinControl() constructor
      // passing in this DIV.
      var homeControlDiv = document.createElement('DIV');
      var homeControl = new DropPinControl(homeControlDiv, map);

      homeControlDiv.index = 1;
      map.controls[google.maps.ControlPosition.TOP_RIGHT].push(homeControlDiv);

      google.maps.event.addListener(map, 'click', function(event) {
        if (dropPinState) {
          placeMarker(event.latLng, $('#location-name-field').val());
        }
      });
    });

    function placeMarker(location, title) {

      var marker = new google.maps.Marker({
        map: map,
        position: location,
        title: title,
        draggable:true,
        animation: google.maps.Animation.DROP
      });

      google.maps.event.addListener(marker, 'click', function() {
        selectMarker(marker, true);
      });
      markers.push(marker);

      //map.setCenter(location);
    }

    function DropPinControl(controlDiv, map) {

      // Set CSS styles for the DIV containing the control
      // Setting padding to 5 px will offset the control
      // from the edge of the map
      controlDiv.style.padding = '5px';

      // Set CSS for the control border
      var controlUI = document.createElement('DIV');
      controlUI.style.backgroundColor = 'white';
      controlUI.style.borderStyle = 'solid';
      controlUI.style.borderWidth = '2px';
      controlUI.style.cursor = 'pointer';
      controlUI.style.textAlign = 'center';
      controlUI.title = 'Click to specify the location manually';
      controlDiv.appendChild(controlUI);

      // Set CSS for the control interior
      var controlText = document.createElement('DIV');
      controlText.style.fontFamily = 'Arial,sans-serif';
      controlText.style.fontSize = '12px';
      controlText.style.paddingLeft = '4px';
      controlText.style.paddingRight = '4px';
      controlText.innerHTML = 'Drop Pin';
      controlUI.appendChild(controlText);

      // Setup the click event listeners: simply set the map to Chicago
      google.maps.event.addDomListener(controlUI, 'click', function() {
        if (dropPinState) {
          dropPinState = false;
          controlUI.style.backgroundColor = 'white';
        } else {
          dropPinState = true;
          controlUI.style.backgroundColor = '#9999DD';
        }
        
      });
    }

    function searchLocations(e) {
      console.log(e);
      var loc = e.target.value;
      geocoder.geocode( { 'address': loc }, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          $.each(markers, function(index, marker) {
            marker.setMap(null);
          });
          markers = [];
          $.each(results, function(index, result) {
            placeMarker(result.geometry.location, result.formatted_address);
          });
          selectMarker(markers[0], false);
        } else if (status == google.maps.GeocoderStatus.ZERO_RESULTS) {
          alert("No results found, please drop a pin to tell us where this is");
        } else {
          alert("Geocode was not successful for the following reason: " + status);
        }
      });
      return false;
    }

    function selectMarker(marker, changeInputField) {
      if (marker.getAnimation() != null) {
        marker.setAnimation(null);
      } else {
        marker.setAnimation(google.maps.Animation.BOUNCE);
        setTimeout(function() {
          if (marker.getAnimation() == google.maps.Animation.BOUNCE) marker.setAnimation(null);
        }, 200);
      }
      infoWindow.setContent(marker.title);
      infoWindow.open(map, marker);
      var latlng = marker.getPosition();
      $('#location-lat-field').val(latlng.lat());
      $('#location-lng-field').val(latlng.lng());
      if (changeInputField) $('#location-name-field').val(marker.title);
    }
    // don't allow enter to submit form
    
    $('#location-name-field').keydown(function(e) {
      if (e.keyCode == 13) {
        e.stopPropagation();
        searchLocations(e);
        return false;
      }
      return true;
    });
    $('#location-name-field').change(searchLocations);
  </script>
<% end %>
